<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qky1T//Z
</value>
  </data>
</root>